//=============================================================================
//
// ライフ処理 [life.cpp]
// Author : Suzuki Mahiro
//
//=============================================================================

//*****************************************************************************
//インクルードファイル
//*****************************************************************************
#include "life.h"
#include "renderer.h"
#include "manager.h"
#include "number.h"
#include "player.h"

//*****************************************************************************
//静的メンバ変数宣言
//*****************************************************************************
CNumber *CLife::m_pNumber = NULL;
int CLife::m_nLife = PLAYER_LIFE;

//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CLife::CLife()
{
}

//*****************************************************************************
//デストラクタ
//*****************************************************************************
CLife::~CLife()
{
}

HRESULT CLife::Init(void)
{
	return S_OK;
}

//*****************************************************************************
//初期化処理
//*****************************************************************************
HRESULT CLife::Init(D3DXVECTOR3 pos)
{
	//数字のメモリ確保
	m_pNumber = CNumber::Create(pos, D3DXVECTOR3(NUMBER_SIZE_X, NUMBER_SIZE_Y, 0.0f), PLAYER_LIFE, CNumber::TYPE_2);

	//オブジェクトの種類の設定
	SetObjType(OBJTYPE_NUMBER);

	return S_OK;
}

//*****************************************************************************
//終了処理
//*****************************************************************************
void CLife::Uninit(void)
{
	if (m_pNumber != NULL)
	{
		m_pNumber->Uninit();
		delete m_pNumber;
		m_pNumber = NULL;
	}
}

//*****************************************************************************
//更新処理
//*****************************************************************************
void CLife::Update(void)
{
}

//*****************************************************************************
//描画処理
//*****************************************************************************
void CLife::Draw(void)
{
	if (m_pNumber != NULL)
	{
		m_pNumber->Draw();
	}
}

//*****************************************************************************
//残機の設定処理
//*****************************************************************************
void CLife::SetLife(int nLife)
{
	m_nLife = nLife;

	//数字の設定
	if (m_pNumber != NULL)
	{
		m_pNumber->SetNumber(m_nLife);
	}
}